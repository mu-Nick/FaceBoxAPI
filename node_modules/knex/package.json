{
  "_from": "knex",
  "_id": "knex@0.19.2",
  "_inBundle": false,
  "_integrity": "sha512-TVYvlp2esS4LjjJSz8XuE48bPJq4N3lWnETQVgJ3hXPEqjiDjxcTa3bCn6F5ipQuBaMAAaFHNrqsZm7BttogdA==",
  "_location": "/knex",
  "_phantomChildren": {},
  "_requested": {
    "escapedName": "knex",
    "fetchSpec": "latest",
    "name": "knex",
    "raw": "knex",
    "rawSpec": "",
    "registry": true,
    "saveSpec": null,
    "type": "tag"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/knex/-/knex-0.19.2.tgz",
  "_shasum": "056efdb33fb8c77d3d76266b5d1d12dc483c21b5",
  "_spec": "knex",
  "_where": "/home/anubhav/Documents/node",
  "author": {
    "name": "Tim Griesser",
    "url": "https://github.com/tgriesser"
  },
  "bin": {
    "knex": "./bin/cli.js"
  },
  "browser": {
    "./lib/bin/cli.js": "./lib/util/noop.js",
    "./lib/migrate/Migrator.js": "./lib/util/noop.js",
    "./lib/seed/Seeder.js": "./lib/util/noop.js",
    "mssql": false,
    "mssql/lib/base": false,
    "mysql": false,
    "mysql2": false,
    "oracle": false,
    "oracledb": false,
    "pg": false,
    "pg-query-stream": false,
    "sqlite3": false,
    "tedious": false
  },
  "bugs": {
    "url": "https://github.com/tgriesser/knex/issues"
  },
  "buildDependencies": [
    "rimraf"
  ],
  "bundleDependencies": false,
  "contributors": [
    {
      "name": "Simon Liden"
    },
    {
      "name": "Mikael Lepisto"
    },
    {
      "name": "Paul Gaurab",
      "url": "https://lorefnon.tech"
    },
    {
      "name": "Igor Savin",
      "url": "https://www.codeflashbacks.com"
    }
  ],
  "dependencies": {
    "bluebird": "^3.5.5",
    "colorette": "1.0.8",
    "commander": "^2.20.0",
    "debug": "4.1.1",
    "getopts": "2.2.4",
    "inherits": "~2.0.4",
    "interpret": "^1.2.0",
    "liftoff": "3.1.0",
    "lodash": "^4.17.15",
    "mkdirp": "^0.5.1",
    "pg-connection-string": "2.0.0",
    "tarn": "^2.0.0",
    "tildify": "2.0.0",
    "uuid": "^3.3.2",
    "v8flags": "^3.1.3"
  },
  "deprecated": false,
  "description": "A batteries-included SQL query & schema builder for Postgres, MySQL and SQLite3 and the Browser",
  "devDependencies": {
    "@types/node": "^10.14.13",
    "JSONStream": "^1.3.5",
    "chai": "^4.2.0",
    "chai-subset-in-order": "^2.1.3",
    "cli-testlab": "^1.7.0",
    "coveralls": "^3.0.5",
    "cross-env": "^5.2.0",
    "dtslint": "^0.9.0",
    "eslint": "^6.1.0",
    "eslint-config-prettier": "^6.0.0",
    "eslint-plugin-import": "^2.18.2",
    "husky": "^3.0.1",
    "jake": "^8.1.1",
    "lint-staged": "^9.2.0",
    "mocha": "^6.2.0",
    "mock-fs": "^4.10.1",
    "mssql": "^5.1.0",
    "mysql": "^2.17.1",
    "mysql2": "^1.6.5",
    "nyc": "^14.1.1",
    "pg": "^7.11.0",
    "pg-query-stream": "^2.0.0",
    "prettier": "^1.18.2",
    "rimraf": "^2.6.3",
    "sinon": "^7.3.2",
    "sinon-chai": "^3.3.0",
    "source-map-support": "^0.5.12",
    "sqlite3": "^4.0.9",
    "tap-spec": "^5.0.0",
    "tape": "^4.11.0",
    "toxiproxy-node-client": "^2.0.6",
    "typescript": "^3.5.3",
    "webpack-cli": "^3.3.6"
  },
  "engines": {
    "node": ">=8"
  },
  "files": [
    "CHANGELOG.md",
    "CONTRIBUTING.md",
    "LICENSE",
    "README.md",
    "bin/*",
    "knex.js",
    "lib/*",
    "lib/*",
    "scripts/*",
    "types/index.d.ts",
    "types/result.d.ts"
  ],
  "homepage": "https://knexjs.org",
  "husky": {
    "hooks": {
      "pre-commit": "lint-staged"
    }
  },
  "keywords": [
    "mssql",
    "mysql",
    "oracle",
    "postgresql",
    "query",
    "sql",
    "sqlite3"
  ],
  "license": "MIT",
  "lint-staged": {
    "*.{js,json}": [
      "git add",
      "prettier --write"
    ]
  },
  "main": "knex.js",
  "name": "knex",
  "nyc": {
    "branches": 69,
    "check-coverage": true,
    "functions": 83,
    "lines": 84,
    "statements": 82
  },
  "optionalDependencies": {},
  "react-native": {
    "./lib/migrate": "./lib/util/noop.js",
    "./lib/seed": "./lib/util/noop.js"
  },
  "readme": "# [knex.js](http://knexjs.org)\n\n[![npm version](http://img.shields.io/npm/v/knex.svg)](https://npmjs.org/package/knex)\n[![npm downloads](https://img.shields.io/npm/dm/knex.svg)](https://npmjs.org/package/knex)\n[![Build Status](https://travis-ci.org/tgriesser/knex.svg?branch=master)](https://travis-ci.org/tgriesser/knex)\n[![Coverage Status](https://coveralls.io/repos/tgriesser/knex/badge.svg?branch=master)](https://coveralls.io/r/tgriesser/knex?branch=master)\n[![Dependencies Status](https://david-dm.org/tgriesser/knex.svg)](https://david-dm.org/tgriesser/knex)\n[![Gitter chat](https://badges.gitter.im/tgriesser/knex.svg)](https://gitter.im/tgriesser/knex)\n[![Language Grade: JavaScript](https://img.shields.io/lgtm/grade/javascript/g/tgriesser/knex.svg?logo=lgtm&logoWidth=18)](https://lgtm.com/projects/g/tgriesser/knex/context:javascript)\n\n> **A SQL query builder that is _flexible_, _portable_, and _fun_ to use!**\n\nA batteries-included, multi-dialect (MSSQL, MySQL, PostgreSQL, SQLite3, Oracle (including Oracle Wallet Authentication)) query builder for\nNode.js, featuring:\n\n- [transactions](http://knexjs.org/#Transactions)\n- [connection pooling](http://knexjs.org/#Installation-pooling)\n- [streaming queries](http://knexjs.org/#Interfaces-Streams)\n- both a [promise](http://knexjs.org/#Interfaces-Promises) and [callback](http://knexjs.org/#Interfaces-Callbacks) API\n- a [thorough test suite](https://travis-ci.org/tgriesser/knex)\n- the ability to [run in the Browser](http://knexjs.org/#Installation-browser)\n\nNode.js versions 8+ are supported.\n\n[Read the full documentation to get started!](http://knexjs.org)  \n[Or check out our Recipes wiki to search for solutions to some specific problems](https://github.com/tgriesser/knex/wiki/Recipes)  \nIf upgrading from older version, see [Upgrading instructions](https://github.com/tgriesser/knex/blob/master/UPGRADING.md)\n\nFor support and questions, join the `#bookshelf` channel on freenode IRC\n\nFor an Object Relational Mapper, see:\n\n- http://bookshelfjs.org\n- https://github.com/Vincit/objection.js\n\nTo see the SQL that Knex will generate for a given query, see: [Knex Query Lab](http://michaelavila.com/knex-querylab/)\n\n## Examples\n\nWe have several examples [on the website](http://knexjs.org). Here is the first one to get you started:\n\n```js\nconst knex = require('knex')({\n  dialect: 'sqlite3',\n  connection: {\n    filename: './data.db',\n  },\n});\n\n// Create a table\nknex.schema\n  .createTable('users', function(table) {\n    table.increments('id');\n    table.string('user_name');\n  })\n\n  // ...and another\n  .createTable('accounts', function(table) {\n    table.increments('id');\n    table.string('account_name');\n    table\n      .integer('user_id')\n      .unsigned()\n      .references('users.id');\n  })\n\n  // Then query the table...\n  .then(function() {\n    return knex('users').insert({ user_name: 'Tim' });\n  })\n\n  // ...and using the insert id, insert into the other table.\n  .then(function(rows) {\n    return knex('accounts').insert({ account_name: 'knex', user_id: rows[0] });\n  })\n\n  // Query both of the rows.\n  .then(function() {\n    return knex('users')\n      .join('accounts', 'users.id', 'accounts.user_id')\n      .select('users.user_name as user', 'accounts.account_name as account');\n  })\n\n  // .map over the results\n  .map(function(row) {\n    console.log(row);\n  })\n\n  // Finally, add a .catch handler for the promise chain\n  .catch(function(e) {\n    console.error(e);\n  });\n```\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/tgriesser/knex.git"
  },
  "scripts": {
    "coveralls": "nyc report --reporter=text-lcov | coveralls",
    "db:start": "docker-compose -f scripts/docker-compose.yml up --build -d mysql oracledbxe postgres mssql; docker-compose -f scripts/docker-compose.yml up initmssqlknexdb waitmysql waitpostgres waitoracledbxe",
    "db:stop": "docker-compose -f scripts/docker-compose.yml down",
    "debug:tape": "node --inspect-brk test/tape/index.js",
    "debug:test": "mocha --inspect-brk --exit -t 0 test/index.js",
    "format": "prettier --write \"{lib,bin,scripts,test}/**/*.js\"",
    "lint": "eslint \"lib/**/*.js\" \"test/**/*.js\"",
    "lint:types": "dtslint types",
    "stress:destroy": "docker-compose -f scripts/stress-test/docker-compose.yml stop",
    "stress:init": "docker-compose -f scripts/stress-test/docker-compose.yml up --no-start && docker-compose -f scripts/stress-test/docker-compose.yml start",
    "stress:test": "node scripts/stress-test/knex-stress-test.js |  grep -A 5 -B 60 -- '- STATS '",
    "test": "mocha --exit -t 10000 test/index.js && npm run test:tape && npm run test:cli",
    "test:cli": "cross-env KNEX_PATH=../knex.js KNEX=bin/cli.js jake -f test/jake/Jakefile",
    "test:nyc": "nyc mocha --exit --check-leaks --globals __core-js_shared__ -t 10000 test/index.js && npm run test:tape && npm run test:cli",
    "test:sqlite": "cross-env DB=sqlite3 npm test",
    "test:tape": "node test/tape/index.js | tap-spec"
  },
  "tonicExampleFilename": "scripts/runkit-example.js",
  "types": "types/index.d.ts",
  "version": "0.19.2"
}
